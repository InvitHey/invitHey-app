{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styled from \"../../../styled-components\";\nexport var Button = styled(TouchableOpacity)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  top: 30px; \\n  height: 56px;\\n  width: 100%;\\n  border-radius: 38px;\\n  elevation: 2;\\n  align-items: center;\\n  flex-direction: row;\\n  padding: \", \";\\n  justify-content: \", \";\\n  background-color: \", \";\\n\"])), function (props) {\n  return props.isDefault ? '0' : '0 40px';\n}, function (props) {\n  return props.isDefault ? 'center' : 'space-around';\n}, function (props) {\n  var _props$theme$colors, _props$theme$colors2;\n\n  return props.isDefault ? (_props$theme$colors = props.theme.colors) == null ? void 0 : _props$theme$colors.primary : (_props$theme$colors2 = props.theme.colors) == null ? void 0 : _props$theme$colors2.white;\n});\nexport var Text = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  \", \"\\n\"])), function (props) {\n  return \"\\n      color: \" + (props.isDefault ? props.theme.colors.white : props.theme.colors.textGray) + \";\\n      font-size: \" + props.theme.typography.smallFont + \";\\n      font-family: \" + props.theme.typography.medium + \";\\n    \";\n});","map":{"version":3,"sources":["/home/bryan/Documentos/Programacao/InvitHey/invitHey-app/src/components/PrimaryBtn/styles.tsx"],"names":["styled","Button","TouchableOpacity","props","isDefault","theme","colors","primary","white","Text","textGray","typography","smallFont","medium"],"mappings":";;;;;AACA,OAAOA,MAAP;AAMA,OAAO,IAAMC,MAAM,GAAGD,MAAM,CAACE,gBAAD,CAAT,6RAQN,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,SAAN,GAAkB,GAAlB,GAAwB,QAA5B;AAAA,CARC,EASE,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACC,SAAN,GAAkB,QAAlB,GAA6B,cAAjC;AAAA,CATP,EAUG,UAAAD,KAAK;AAAA;;AAAA,SAAIA,KAAK,CAACC,SAAN,0BAAkBD,KAAK,CAACE,KAAN,CAAYC,MAA9B,qBAAkB,oBAAoBC,OAAtC,2BAAgDJ,KAAK,CAACE,KAAN,CAAYC,MAA5D,qBAAgD,qBAAoBE,KAAxE;AAAA,CAVR,CAAZ;AAaP,OAAO,IAAMC,IAAI,GAAGT,MAAM,CAACS,IAAV,uFACb,UAACN,KAAD,EAAW;AACX,8BACWA,KAAK,CAACC,SAAN,GAAkBD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBE,KAArC,GAA6CL,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBI,QAD3E,6BAEeP,KAAK,CAACE,KAAN,CAAYM,UAAZ,CAAuBC,SAFtC,8BAGiBT,KAAK,CAACE,KAAN,CAAYM,UAAZ,CAAuBE,MAHxC;AAKD,CAPc,CAAV","sourcesContent":["import { TouchableOpacity } from 'react-native';\nimport styled from '../../../styled-components';\n\ninterface ButtonProps {\n  isDefault: boolean,\n}\n\nexport const Button = styled(TouchableOpacity)<ButtonProps>`\n  top: 30px; \n  height: 56px;\n  width: 100%;\n  border-radius: 38px;\n  elevation: 2;\n  align-items: center;\n  flex-direction: row;\n  padding: ${props=>  props.isDefault ? '0' : '0 40px'};\n  justify-content: ${props=>  props.isDefault ? 'center' : 'space-around'};\n  background-color: ${props => props.isDefault ? props.theme.colors?.primary : props.theme.colors?.white};\n`\n\nexport const Text = styled.Text<ButtonProps>`\n  ${(props) => {\n    return `\n      color: ${props.isDefault ? props.theme.colors.white : props.theme.colors.textGray};\n      font-size: ${props.theme.typography.smallFont};\n      font-family: ${props.theme.typography.medium};\n    `\n  }}\n`"]},"metadata":{},"sourceType":"module"}